// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UchetSI.Data.Models;

#nullable disable

namespace UchetSI.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("UchetSI.Data.Models.DescriptionMI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MeasurementLimitId")
                        .HasColumnType("int");

                    b.Property<int>("TypeOfEquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("UnitOfMeasurementId")
                        .HasColumnType("int");

                    b.Property<int>("VerificationIntervalId")
                        .HasColumnType("int");

                    b.Property<int>("outputSignalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MeasurementLimitId");

                    b.HasIndex("TypeOfEquipmentId");

                    b.HasIndex("UnitOfMeasurementId");

                    b.HasIndex("VerificationIntervalId");

                    b.HasIndex("outputSignalId");

                    b.ToTable("DescriptionMIs");
                });

            modelBuilder.Entity("UchetSI.Data.Models.DescriptionOfEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("NameDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DescriptionOfEquipments");
                });

            modelBuilder.Entity("UchetSI.Data.Models.History", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTimeChange")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MeashuringToolId")
                        .HasColumnType("int");

                    b.Property<int?>("PositionId")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MeashuringToolId");

                    b.HasIndex("PositionId");

                    b.HasIndex("StatusId");

                    b.ToTable("Histories");
                });

            modelBuilder.Entity("UchetSI.Data.Models.HoldingTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodOfTO")
                        .HasColumnType("int");

                    b.Property<int?>("YearEvent")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("HoldingTOs");
                });

            modelBuilder.Entity("UchetSI.Data.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("NameLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("TypeLocationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("TypeLocationId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("UchetSI.Data.Models.Maker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("NameMaker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Makers");
                });

            modelBuilder.Entity("UchetSI.Data.Models.MeashuringTool", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DescriptionMIId")
                        .HasColumnType("int");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusOfMTId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DescriptionMIId");

                    b.HasIndex("StatusOfMTId");

                    b.ToTable("MeashuringTools");
                });

            modelBuilder.Entity("UchetSI.Data.Models.MeasurementLimit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<float>("LowerLimit")
                        .HasColumnType("real");

                    b.Property<float>("UpperLimit")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("MeasurementLimits");
                });

            modelBuilder.Entity("UchetSI.Data.Models.OutputSignal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("NameOutputSignal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OutputSignals");
                });

            modelBuilder.Entity("UchetSI.Data.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("NameParameter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamePosition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Paz")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("UchetSI.Data.Models.ScheduleTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("FactDateTOFrom")
                        .HasColumnType("int");

                    b.Property<int?>("FactDateTOTo")
                        .HasColumnType("int");

                    b.Property<int>("HoldingTOId")
                        .HasColumnType("int");

                    b.Property<int?>("NumberMonth")
                        .HasColumnType("int");

                    b.Property<int?>("PlanDataTOFrom")
                        .HasColumnType("int");

                    b.Property<int?>("PlanDateTOTo")
                        .HasColumnType("int");

                    b.Property<int>("TypeTOId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HoldingTOId");

                    b.HasIndex("TypeTOId");

                    b.ToTable("ScheduleTOs");
                });

            modelBuilder.Entity("UchetSI.Data.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("NameStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("UchetSI.Data.Models.StatusOfMT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("NameStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StatusOfMTs");
                });

            modelBuilder.Entity("UchetSI.Data.Models.TypeLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("NameTypelocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeLocations");
                });

            modelBuilder.Entity("UchetSI.Data.Models.TypeOfEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DescriptionOfEquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("MakerId")
                        .HasColumnType("int");

                    b.Property<string>("NameTypeOfEquipment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DescriptionOfEquipmentId");

                    b.HasIndex("MakerId");

                    b.ToTable("TypeOfEquipments");
                });

            modelBuilder.Entity("UchetSI.Data.Models.TypeTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("NameTO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeTOs");
                });

            modelBuilder.Entity("UchetSI.Data.Models.UnitOfMeasurement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UnitOfMeasurements");
                });

            modelBuilder.Entity("UchetSI.Data.Models.VerificationInterval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Interval")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VerificationInterval");
                });

            modelBuilder.Entity("UchetSI.Data.Models.DescriptionMI", b =>
                {
                    b.HasOne("UchetSI.Data.Models.MeasurementLimit", "MeasurementLimit")
                        .WithMany("DescriptionsMIs")
                        .HasForeignKey("MeasurementLimitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UchetSI.Data.Models.TypeOfEquipment", "TypeOfEquipment")
                        .WithMany("DescriptionMIs")
                        .HasForeignKey("TypeOfEquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UchetSI.Data.Models.UnitOfMeasurement", "UnitOfMeasurement")
                        .WithMany("DescriptionsMI")
                        .HasForeignKey("UnitOfMeasurementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UchetSI.Data.Models.VerificationInterval", "VerificationInterval")
                        .WithMany("DescriptionsMI")
                        .HasForeignKey("VerificationIntervalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UchetSI.Data.Models.OutputSignal", "outputSignal")
                        .WithMany("DescriptionsMI")
                        .HasForeignKey("outputSignalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MeasurementLimit");

                    b.Navigation("TypeOfEquipment");

                    b.Navigation("UnitOfMeasurement");

                    b.Navigation("VerificationInterval");

                    b.Navigation("outputSignal");
                });

            modelBuilder.Entity("UchetSI.Data.Models.History", b =>
                {
                    b.HasOne("UchetSI.Data.Models.MeashuringTool", "MeashuringTool")
                        .WithMany("Histories")
                        .HasForeignKey("MeashuringToolId");

                    b.HasOne("UchetSI.Data.Models.Position", "Position")
                        .WithMany("Histories")
                        .HasForeignKey("PositionId");

                    b.HasOne("UchetSI.Data.Models.Status", "Status")
                        .WithMany("Histories")
                        .HasForeignKey("StatusId");

                    b.Navigation("MeashuringTool");

                    b.Navigation("Position");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("UchetSI.Data.Models.HoldingTO", b =>
                {
                    b.HasOne("UchetSI.Data.Models.Location", "Location")
                        .WithMany("HoldingTOs")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("UchetSI.Data.Models.Location", b =>
                {
                    b.HasOne("UchetSI.Data.Models.Location", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.HasOne("UchetSI.Data.Models.TypeLocation", "TypeLocation")
                        .WithMany("Locations")
                        .HasForeignKey("TypeLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parent");

                    b.Navigation("TypeLocation");
                });

            modelBuilder.Entity("UchetSI.Data.Models.MeashuringTool", b =>
                {
                    b.HasOne("UchetSI.Data.Models.DescriptionMI", "DescriptionMI")
                        .WithMany("MeashuringTools")
                        .HasForeignKey("DescriptionMIId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UchetSI.Data.Models.StatusOfMT", "StatusOfMT")
                        .WithMany("MeashuringTools")
                        .HasForeignKey("StatusOfMTId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DescriptionMI");

                    b.Navigation("StatusOfMT");
                });

            modelBuilder.Entity("UchetSI.Data.Models.Position", b =>
                {
                    b.HasOne("UchetSI.Data.Models.Location", "Location")
                        .WithMany("Positions")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("UchetSI.Data.Models.ScheduleTO", b =>
                {
                    b.HasOne("UchetSI.Data.Models.HoldingTO", "HoldingTO")
                        .WithMany("ScheduleTOs")
                        .HasForeignKey("HoldingTOId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UchetSI.Data.Models.TypeTO", "TypeTO")
                        .WithMany("ScheduleTOs")
                        .HasForeignKey("TypeTOId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoldingTO");

                    b.Navigation("TypeTO");
                });

            modelBuilder.Entity("UchetSI.Data.Models.TypeOfEquipment", b =>
                {
                    b.HasOne("UchetSI.Data.Models.DescriptionOfEquipment", "DescriptionOfEquipment")
                        .WithMany("TypeOfEquipment")
                        .HasForeignKey("DescriptionOfEquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UchetSI.Data.Models.Maker", "Maker")
                        .WithMany("TypeOfEquipment")
                        .HasForeignKey("MakerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DescriptionOfEquipment");

                    b.Navigation("Maker");
                });

            modelBuilder.Entity("UchetSI.Data.Models.DescriptionMI", b =>
                {
                    b.Navigation("MeashuringTools");
                });

            modelBuilder.Entity("UchetSI.Data.Models.DescriptionOfEquipment", b =>
                {
                    b.Navigation("TypeOfEquipment");
                });

            modelBuilder.Entity("UchetSI.Data.Models.HoldingTO", b =>
                {
                    b.Navigation("ScheduleTOs");
                });

            modelBuilder.Entity("UchetSI.Data.Models.Location", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("HoldingTOs");

                    b.Navigation("Positions");
                });

            modelBuilder.Entity("UchetSI.Data.Models.Maker", b =>
                {
                    b.Navigation("TypeOfEquipment");
                });

            modelBuilder.Entity("UchetSI.Data.Models.MeashuringTool", b =>
                {
                    b.Navigation("Histories");
                });

            modelBuilder.Entity("UchetSI.Data.Models.MeasurementLimit", b =>
                {
                    b.Navigation("DescriptionsMIs");
                });

            modelBuilder.Entity("UchetSI.Data.Models.OutputSignal", b =>
                {
                    b.Navigation("DescriptionsMI");
                });

            modelBuilder.Entity("UchetSI.Data.Models.Position", b =>
                {
                    b.Navigation("Histories");
                });

            modelBuilder.Entity("UchetSI.Data.Models.Status", b =>
                {
                    b.Navigation("Histories");
                });

            modelBuilder.Entity("UchetSI.Data.Models.StatusOfMT", b =>
                {
                    b.Navigation("MeashuringTools");
                });

            modelBuilder.Entity("UchetSI.Data.Models.TypeLocation", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("UchetSI.Data.Models.TypeOfEquipment", b =>
                {
                    b.Navigation("DescriptionMIs");
                });

            modelBuilder.Entity("UchetSI.Data.Models.TypeTO", b =>
                {
                    b.Navigation("ScheduleTOs");
                });

            modelBuilder.Entity("UchetSI.Data.Models.UnitOfMeasurement", b =>
                {
                    b.Navigation("DescriptionsMI");
                });

            modelBuilder.Entity("UchetSI.Data.Models.VerificationInterval", b =>
                {
                    b.Navigation("DescriptionsMI");
                });
#pragma warning restore 612, 618
        }
    }
}
